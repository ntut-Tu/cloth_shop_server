databaseChangeLog:
  - changeSet:
      id: trigger-ratting
      author: quinn
      preConditions:
        - onFail: CONTINUE
        - dbms:
            type: postgresql
      changes:
        - sql:
            splitStatements: false
            sql: |
              CREATE OR REPLACE FUNCTION update_product_rate()
              RETURNS TRIGGER AS $$
              BEGIN
                UPDATE product
                SET rate = (
                  SELECT ROUND(AVG(rate), 2)
                  FROM review
                  WHERE fk_product_id = NEW.fk_product_id
                )
                WHERE product_id = NEW.fk_product_id;
                
                RETURN NEW;
              END;
              $$ LANGUAGE plpgsql;

              CREATE TRIGGER review_insert_trigger
              AFTER INSERT ON review
              FOR EACH ROW
              EXECUTE FUNCTION update_product_rate();

