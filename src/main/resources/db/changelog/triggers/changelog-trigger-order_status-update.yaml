databaseChangeLog:
  - changeSet:
      id: create_trigger_pgsql
      author: quinn
      preConditions:
        - onFail: CONTINUE
        - dbms:
            type: postgresql
      changes:
        - sql:
            splitStatements: false
            sql: |
              CREATE OR REPLACE FUNCTION update_order_status() RETURNS trigger AS $$
              BEGIN
                IF NEW.store_order_status = 'shipped' THEN
                  UPDATE "order"
                  SET status = 'Delivered'
                  WHERE order_id = NEW.fk_order_id
                    AND NOT EXISTS (
                      SELECT 1
                      FROM store_order
                      WHERE fk_order_id = NEW.fk_order_id
                        AND store_order_status != 'shipped'
                    );
                END IF;
                RETURN NEW;
              END;
              $$ LANGUAGE plpgsql;

              CREATE TRIGGER trg_update_order_status
              AFTER UPDATE ON store_order
              FOR EACH ROW
              EXECUTE FUNCTION update_order_status();
